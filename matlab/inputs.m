% Author: Min Kim
% Date: 11/22/21
% FileName: inputs.m
% Sample inputs and instruction of how to use clsTruss

close all;
clear;
clc;

% Set up ploblem geometry
node = [ ...
        0, 0; ...
        2, 0; ...
        4, 0; ...
        6, 0; ...
        4, 1; ...
        2, 2; ...
        0, 3; ...
    ];
element = [ ...
            1, 2; ...
            1, 6; ...
            2, 3; ...
            2, 7; ...
            2, 6; ...
            2, 5; ...
            3, 5; ...
            3, 4; ...
            4, 5; ...
            5, 6; ...
            6, 7; ...
        ];
% Elastic modules
% If all of element has same E, then jsut define as
% E = Einput else, E = [E1; E2;.....;En]
E = 70e6; % Pa
% Area of each element, the format is same as above
A = 0.003125; % m^2

% Set up boundery condition
% Force value construction
% F = [node, x, y, z; ...] - 3D case
% F = [node, x, y; ...] - 2D case
% F = [node, x; ...] - 1D case
% If only one direction is given as BC, use unknow input as "NaN"
% Ex: we only know force applied on y direction,
% F = [node, NaN, y; ...]
F = [ ...
        5, 0, -2e3; ...
        6, 0, -2e3; ...
    ]; % N

% Displacement value construction, the format is same as above
dispVec = [ ...
            1, 0, 0; ...
            7, 0, 0; ...
            4, NaN, -0.6; ...
        ];

% Initialize the class
% if we do not have boundery condtion, use NaN
% ex)
% if force BC is not defined
% tr = clsTruss(node, element, E, A, NaN, dispVec)
% if displacement BC is not defined
% tr = clsTruss(node, element, E, A, F, NaN)
% if none of them defined
% te = clsTruss(node, element, E, A, NaN, NaN)
tr = clsTruss(node, element, E, A, F, dispVec);

% Pre defind function that calculates autometically
% True for print trasult into terminal, False do not print to terminal
tr.calcAll(true);
% Save result into excel file, it it got called before calculation wihtout
% calling calcBC, it will only save system stiffiness matrix
tr.save2xlsx();
% False for disply figure, True no diaply, but save figure into outPic folder
% P.S, not recommened to use in 1D case
tr.pltTruss(false);
tr.pltTruss(true);